#ifndef VKR_PARAMS_HPP
#define VKR_PARAMS_HPP

#include "bignum.h"

const int maxCoefficient = 100;
const int numPoints = 200;

const int TO_STRING_PRECISION = 250;
const std::string PathToData = "../data/";

bigfloat_t dotti = bigfloat_t("0.73908513321516064165531208767387340401341175890075746496568063577328465488354759459937610693176653184980124664398716302771490369130842031578044057462077868852490389153928943884509523480133563127677223158095635377657245120437341993643351253840978003434064670047940214347808027180188377113613820420663163350372779916967312232300613886582036217708109978970626842405880948986832618606004858989585487257367640150752276081803914595181016281591200964616460675440513264151710644662811093608258487837138395556");
bigfloat_t result_sin_dotti = bigfloat_t("0.67361202918321483798668632649947915576381006324563461167129415074298319680434205756865987254499083621813584242002576882874918682369156027722129167141202959783080248342205558200180587832088191609565958630174311767831827545530383713935689567163198569612047443746570454427272544946788390174032078634636807560004022161336572297769140375686838943598682945839428016636173327319033980405604038938951618108883169625242256649059744788462547393420267330533052743264179917607536411059535143722416357253787025157");

template<typename T>
T fsin(T x) {
    return sin(std::move(x), 150);
}

template<typename T>
T fcos(T x) {
    return cos(std::move(x), 150);
}

#endif //VKR_PARAMS_HPP
